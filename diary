#!/usr/bin/env bash

# set pipefail so that if any command in a pipe fails, the pipe as a whole fails
set -o pipefail

DEBUG=1 # Set to 1 to enable debug messages
LOG=1   # Set to 1 to enable log messages

# Ansi escape colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
#PURPLE='\033[0;35m' # Not used, but here for reference if needed in the future
CYAN='\033[0;36m'
NC='\033[0m'

# Error, success, info and warning messages
error() {
	if ! [[ -v ${LOG} ]]; then
		return
	fi
	echo -e "[${RED}ERROR${NC}] ${1}"
}

success() {
	if ! [[ -v ${LOG} ]]; then
		return
	fi
	echo -e "[${GREEN}SUCCESS${NC}] ${1}"
}

info() {
	if ! [[ -v ${LOG} ]]; then
		return
	fi
	echo -e "[${CYAN}INFO${NC}] ${1}"
}

debug() {
	if ! [[ -v ${DEBUG} ]]; then
		return
	fi
	echo -e "[${BLUE}DEBUG${NC}] ${1}"
}

warn() {
	if ! [[ -v ${LOG} ]]; then
		return
	fi
	echo -e "[${YELLOW}WARNING${NC}] ${1}"
}

# Trap ctrl-c and call ctrl_c()
ctrl_c() {
	echo -e "\nCaught ${GREEN}CTRL-C${NC}, aborting..."
	exit 1
}

trap ctrl_c INT

# Preliminary checks

DIARY_DIR="${HOME}/.diary"
FIND_RESULT=$(find "${DIARY_DIR}" -maxdepth 1 -type d -printf "%f\n" | grep -v "^$(basename "${DIARY_DIR}")$") # Find all diaries in the diary directory
readarray -t DIARY_LIST <<<"${FIND_RESULT}"                                                                    # Convert the find result to an array
FZF_INSTALLED=$(command -v fzf)
if ! cat "${DIARY_DIR}/.default_diary" >/dev/null 2>&1; then
	info "No default diary set"
else
	DEFAULT_DIARY=$(cat "${DIARY_DIR}/.default_diary")
fi

if [[ ! -d ${DIARY_DIR} ]]; then
	warn "Diary directory not found, creating one"
	info "Created diary directory at \"${DIARY_DIR}\""
	mkdir -p "${DIARY_DIR}"
fi

# General functions for all diary functions
choice() {
	echo -e -n "${BLUE}${1} (y/n)${NC}: " >&2
	read -r CHOICE
	echo "${CHOICE}"
}

# Diary functions

# Create a new diary with the given name (or ask for a name if none is given)

select_diary() {
	if [[ -n ${FZF_INSTALLED} ]]; then
		debug "fzf installed, using fzf" >&2
		RESULT=$(printf "%s\n" "${DIARY_LIST[@]}" | fzf --prompt="Select a diary: ") # Use fzf to select a diary
		echo "${RESULT}"
	else
		debug "fzf not installed, using select" >&2
		PS3="Select a diary: "
		CHOICES=("${DIARY_LIST[@]}" "Quit")
		select opt in "${CHOICES[@]}"; do
			if [[ ${opt} == "Quit" ]]; then
				echo "You chose to quit." >&2
				exit 0
			elif [[ -z ${opt} ]]; then
				echo "Invalid option. Please try again." >&2
			else
				echo "You chose: ${opt}" >&2
				echo "${opt}"
				break
			fi
		done
	fi
}

select_page() {
	FIND_PAGES=$(find "${DIARY_DIR}/${1}/pages/" -maxdepth 1 -type f -printf "%f\n" | grep -v "^$(basename "pages/")$") # Find all diaries in the diary directory

	debug "${DIARY_DIR}/${1}/pages" >&2

	if [[ -n ${FZF_INSTALLED} ]]; then
		debug "fzf installed, using fzf" >&2
		RESULT=$(printf "%s\n" "${PAGE_LIST[@]}" | fzf --prompt="Select a page: ") # Use fzf to select a page
	else
		debug "fzf not installed, using select" >&2
		while true; do
			readarray -t PAGE_LIST <<<"${FIND_PAGES}"
			debug "Found pages: ${PAGE_LIST[*]}" >&2
			PS3="Select a page: "
			CHOICES=("${PAGE_LIST[@]}" "New Page" "Quit")
			select opt in "${CHOICES[@]}"; do
				if [[ ${opt} == "Quit" ]]; then
					echo "You chose to quit." >&2
					IWANTTOQUIT=1
					echo "Quit"
					break
				elif [[ ${opt} == "New Page" ]]; then
					echo "You chose to create a new page." >&2
					touch "${DIARY_DIR}/${1}/pages/page$((${#PAGE_LIST[@]} + 1)).md"
					break
				elif [[ -z ${opt} ]]; then
					echo "Invalid option. Please try again." >&2
				else
					echo "You chose: ${opt}" >&2
					echo "${opt}"
					break
				fi
			done
			if [[ -v IWANTTOQUIT ]]; then
				break
			fi
		done
	fi
}

new_diary() {
	if [[ -z $2 ]]; then
		warn "No diary name given"
		echo -e -n "${BLUE}Enter diary name${NC}: "
		read -r DIARY_NAME
	else
		DIARY_NAME=$2
	fi

	local NEW_DIARY="${DIARY_DIR}/${DIARY_NAME}"
	local DECISION
	if [[ -d ${NEW_DIARY} ]]; then
		error "Diary already exists at \"${NEW_DIARY}\", please choose a different name"
		exit 1
	else
		if [[ -z $3 ]]; then
			local info_message='No page name given, using "page1"'
			PAGE_NAME="page1"
		else
			local info_message="Using page name \"${3}\""
			PAGE_NAME=$3
		fi

		info "${info_message}"
		mkdir -p "${NEW_DIARY}"                                           # Create the diary directory
		mkdir -p "${NEW_DIARY}/pages"                                     # Create the pages directory
		echo -e "# ${PAGE_NAME}\n" >>"${NEW_DIARY}/pages/${PAGE_NAME}.md" # Create the first page and add a title
		debug "Created page \"${NEW_DIARY}/pages/${PAGE_NAME}.md\""
		success "Created diary \"${DIARY_NAME}\""
		DECISION=$(choice "Do you want to edit the diary now?")
		if [[ ${DECISION} == "y" ]]; then
			edit_diary "${DIARY_NAME}"
		fi
	fi
}

default_diary() {
	echo "default diary"
}

list_diaries() {
	if [[ -z ${RESULT} ]]; then
		error "No diary selected"
		exit 1
	else
		info "Selected diary \"${RESULT}\""
		local ACTIONS=("edit" "make default" "rename" "delete" "cancel")
		if [[ -n ${FZF_INSTALLED} ]]; then
			ACTION=$(printf "%s\n" "${ACTIONS[@]}" | fzf --prompt="Select an action: ")
			case ${ACTION} in
			"edit")
				debug 'Selected "edit"'
				edit_diary "${RESULT}"
				;;
			"make default")
				debug 'Selected "make default"'
				default_diary "${RESULT}"
				;;
			"rename")
				debug 'Selected "rename"'
				rename_diary "${RESULT}"
				;;
			"delete")
				debug 'Selected "delete"'
				delete_diary "${RESULT}"
				;;
			"cancel")
				info "Cancelled, exiting..."
				debug 'Exiting with code 0, selected "cancel"'
				exit 0
				;;
			*)
				error "Invalid action \"${ACTION}\""
				exit 1
				;;
			esac
		fi
	fi
}

edit_diary() {
	local EDITOR_CHOICE
	if [[ -z $2 ]]; then
		warn "No diary name given, using default diary"
		if [[ -z ${DEFAULT_DIARY} ]]; then
			warn "No default diary set, select a diary"
			DIARY_NAME=$(select_diary)
			if [[ ${DIARY_NAME} == "Quit" ]]; then
				info "Cancelled, exiting..."
				debug 'Exiting with code 0, selected "cancel"'
				exit 0
			fi
		else
			DIARY_NAME=$(default_diary)
		fi
	else
		DIARY_NAME=$2
	fi
	if [[ -z ${EDITOR} ]]; then
		warn "No editor set"
		EDITOR_CHOICE=$(choice "Do you want to set an editor now?, if not, the default editor will be nano")
		if [[ ${EDITOR_CHOICE} == "y" ]]; then
			echo -e -n "${BLUE}Enter editor${NC}: "
			read -r EDITOR
			echo export EDITOR="${EDITOR}" >>~/.bashrc
			echo export EDITOR="${EDITOR}" >>~/.zshrc
		else
			echo export EDITOR="nano" >>~/.bashrc
			echo export EDITOR="nano" >>~/.zshrc
		fi
	fi
	debug "Using editor \"${EDITOR}\""
	PAGE=$(select_page "${DIARY_NAME}")
	if [[ ${PAGE} == "Quit" ]]; then
		info "Cancelled, exiting..."
		debug 'Exiting with code 0, selected "Quit"'
		exit 0
	fi
	${EDITOR} "${PAGE}"
}

write_help() {
	echo -e "Usage: $0 [OPTION] [DIARY]"
	echo -e "Options: \n"
	echo -e "${RED}new, n, --new, -n,${NC} \t\t |"
	echo -e "${RED}create, c, --create, -c,${NC} \t |"
	echo -e "${RED}add, a, --add, -a,${NC} \t\t | \t${CYAN}Creates a new diary with the given name${NC}"
	echo -e "${RED}make, m, --make, -m,${NC} \t\t |"
	echo -e "${RED}-yes${NC} \t\t\t\t |"
	echo -e "\t\t\t\t |"
	echo -e "${RED}default, d, --default, -d${NC} \t | \t${CYAN}Sets the default diary${NC}"
	echo -e "\t\t\t\t |"
	echo -e "${RED}list, ls, --list, -ls,${NC} \t\t | \t${CYAN}Lists all diaries and allows you to choose${NC}"
	echo -e "${RED}view, v, --view, -v${NC} \t\t | \t${CYAN}which to rename, edit, delete and make default${NC}"
	echo -e "\t\t\t\t |"
	echo -e "${RED}edit, e, --edit, -e${NC} \t\t | \t${CYAN}Edits the given diary (${GREEN}or the default diary if none is given${CYAN})${NC}"
	echo -e "\t\t\t\t |"
	echo -e "${RED}delete, del, --delete, -del,${NC} \t |"
	echo -e "${RED}rm, remove, -rm, --remove,${NC} \t | \t${CYAN}Deletes the given diary (${GREEN}or the default diary if none is given${CYAN})${NC}"
	echo -e "${RED}-no${NC} \t\t\t\t |"
	echo -e "\t\t\t\t |"
	echo -e "${RED}help, h, --help, -h${NC} \t\t | \t${CYAN}Shows this help message${NC}"
	echo -e "Optional arguments: \n"
	echo -e "${RED}--no-fzf, -f${NC} \t\t\t | \t${CYAN}Disables fzf${NC}"
}

case $1 in
"new" | "n" | "--new" | "-n" | "create" | "c" | "--create" | "-c" | "add" | "a" | "--add" | "-a" | "make" | "m" | "--make" | "-m" | "-yes")
	new_diary "${@}"
	;;
"default" | "d" | "--default" | "-d")
	echo "default diary"
	;;
"list" | "ls" | "--list" | "-ls" | "view" | "v" | "--view" | "-v")
	list_diaries "${@}"
	;;
"edit" | "e" | "--edit" | "-e")
	edit_diary "${@}"
	;;
"delete" | "del" | "rm" | "remove" | "--delete" | "-del" | "-rm" | "--remove" | "-no")
	echo "delete diary"
	;;
"help" | "h" | "--help" | "-h" | *)
	write_help
	;;
esac
